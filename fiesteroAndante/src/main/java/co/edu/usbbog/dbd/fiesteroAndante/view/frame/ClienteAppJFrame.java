package co.edu.usbbog.dbd.fiesteroAndante.view.frame;

import co.edu.usbbog.dbd.fiesteroAndante.model.EmpleadoDTO;
import co.edu.usbbog.dbd.fiesteroAndante.controller.logic.EmpleadoBO;
import co.edu.usbbog.dbd.fiesteroAndante.controller.logic.ProductoBO;
import co.edu.usbbog.dbd.fiesteroAndante.controller.logic.SucursalBO;
import co.edu.usbbog.dbd.fiesteroAndante.model.ProductoDTO;
import co.edu.usbbog.dbd.fiesteroAndante.model.SucursalDTO;
import co.edu.usbbog.dbd.fiesteroAndante.view.window.EmpleadoJPanel;
//import co.edu.usbbog.dbd.fiesteroAndante.view.window.Empleados;
import co.edu.usbbog.dbd.fiesteroAndante.view.window.LoginJpanel;
import co.edu.usbbog.dbd.fiesteroAndante.view.window.MenuJPanel;
//import co.edu.usbbog.dbd.fiesteroAndante.view.window.Menu;
import co.edu.usbbog.dbd.fiesteroAndante.view.window.ProductoJPanel;
import java.sql.Date;
import java.util.List;
import javax.swing.JPanel;

public class ClienteAppJFrame extends javax.swing.JFrame {

    //RELACIONES DE VISTA
    private EmpleadoJPanel empleadoJPanel;
    private LoginJpanel loginJPanel;
    private MenuJPanel menuJPanel;
    private ProductoJPanel productoJPanel;
    MenuJPanel Menu;

//RELACIONES DE LOGICA
    private EmpleadoBO empleadoBO;
    private ProductoBO productoBO;
    private SucursalBO sucursalBO;

    public ClienteAppJFrame() {
        this.setUndecorated(true);
        this.setLocationRelativeTo(null);
        this.empleadoBO = new EmpleadoBO();
        this.productoBO = new ProductoBO();
        this.sucursalBO = new SucursalBO();
        this.loginJPanel = new LoginJpanel(this);
        this.iniciar();

    }

    private void iniciar() {
        loginJPanel = new LoginJpanel(this);
        loginJPanel.setVisible(true);
        this.add(loginJPanel);
        this.pack();
        this.setLocationRelativeTo(null);

    }

    public void irMenu(LoginJpanel LoginJpanel) {
        this.remove(LoginJpanel);
        Menu = new MenuJPanel(this);
        Menu.setVisible(true);
        add(Menu);
        pack();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteAppJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteAppJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteAppJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteAppJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClienteAppJFrame().setVisible(true);
            }
        });
    }

    public LoginJpanel getLoginJPanel() {
        return loginJPanel;
    }

    //  CRUD PRODUCTO 
    public List<ProductoDTO> mostrarProducto() {
        return this.productoBO.mostrar();
    }

    public ProductoDTO buscarProducto(int cod_producto) {
        return this.productoBO.buscarProducto(cod_producto);
    }

    public String eliminarProducto(int cod_producto) {
        return this.productoBO.eliminarProducto(cod_producto);
    }

    public String modificarProducto(int cod_producto, String calidad_producto, Double precio_producto, Date fecha_caducidad, Date aniejamiento_producto, int cantidad_producto, String tipo, String comida, String orquesta, SucursalDTO sucursal) {
        return this.productoBO.editarProducto(cod_producto, calidad_producto, precio_producto, fecha_caducidad, aniejamiento_producto, cantidad_producto, tipo, comida, orquesta, sucursal);
    }

    public String crearProducto(int cod_producto, String calidad_producto, Double precio_producto, Date fecha_caducidad, Date aniejamiento_producto, int cantidad_producto, String tipo, String comida, String orquesta, SucursalDTO sucursal) {
        return this.productoBO.crearProducto(cod_producto, calidad_producto, precio_producto, fecha_caducidad, aniejamiento_producto, cantidad_producto, tipo, comida, orquesta, sucursal);
    }

    // CRUD EMPLEADO 
    public List<EmpleadoDTO> mostrarEmpleados() {
        return this.empleadoBO.mostrarEmpleados();
    }

    public EmpleadoDTO buscarEmpleado(int cedula) {
        return this.empleadoBO.buscarEmpleado(cedula);
    }

    public String eliminarEmpleado(int cedula) {
        return this.empleadoBO.eliminarEmpleado(cedula);
    }

    public String modificarEmpleado(int id_empleado, String nombre_empleado, String profesion_empleado, int telefono_empleado, String correo_empleado, Double salario_empleado, String cargo, int sucursal) {
        return this.empleadoBO.modificarEmpleado(id_empleado, nombre_empleado, profesion_empleado, telefono_empleado, correo_empleado, salario_empleado, cargo, buscarSucursal(sucursal));
    }

    public String crearEmpleados(int id_empleado, String nombre_empleado, String profesion_empleado, int telefono_empleado, String correo_empleado, Double salario_empleado, String cargo, int sucursal) {
        return this.empleadoBO.crearEmpleado(id_empleado, nombre_empleado, profesion_empleado, telefono_empleado, correo_empleado, salario_empleado, cargo, buscarSucursal(sucursal));
    }

    // CRUD sucursal
    public List<SucursalDTO> mostrarSucursal() {
        return this.sucursalBO.mostrar();
    }

    public SucursalDTO buscarSucursal(int id_sucursal) {
        return sucursalBO.buscarSucursal(id_sucursal);
    }

    // NAVEGACION POR LA INTERFAZ
    public void irDeMenuAProducto(JPanel panel) {
        this.remove(panel);
        this.productoJPanel = new ProductoJPanel(this);
        this.productoJPanel.setVisible(true);
        this.add(this.productoJPanel);
        this.pack();
        this.setLocationRelativeTo(null);
        this.loginJPanel = null;
    }

    public void irDeMenuAEmpleado(JPanel panel1) {
        this.remove(panel1);
        this.empleadoJPanel = new EmpleadoJPanel(this);
        this.empleadoJPanel.setVisible(true);
        this.add(this.empleadoJPanel);
        this.pack();
        this.setLocationRelativeTo(null);
        this.menuJPanel = null;
    }

    public void irDeProductoAMenu(JPanel panel2) {
        this.remove(panel2);
        this.menuJPanel = new MenuJPanel(this);
        this.menuJPanel.setVisible(true);
        this.add(this.menuJPanel);
        this.pack();
        this.setLocationRelativeTo(null);
        this.productoJPanel = null;
    }

    public void irDeEmpleadoAMenu(JPanel panel3) {
        this.remove(panel3);
        this.menuJPanel = new MenuJPanel(this);
        this.menuJPanel.setVisible(true);
        this.add(this.menuJPanel);
        this.pack();
        this.setLocationRelativeTo(null);
        this.empleadoJPanel = null;
    }

    /**
     * Creates new form PersonaAppJFrame
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
